name: Build and Push Docker Image

# Trigger the workflow on push to the main branch
on:
  push:
    branches:
      - main

jobs:
  # First job: Build the Docker image
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Check out the code from the repository

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1  # Set up Docker Buildx for multi-platform builds

    - name: Log in to Docker Hub
      uses: docker/login-action@v2  # Log in to Docker Hub
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # Use the Docker Hub username stored in secrets
        password: ${{ secrets.DOCKER_PASSWORD }}  # Use the Docker Hub password stored in secrets

    - name: Build and tag the Docker image
      run: |
        docker build -t my-django-app:latest .  # Build the Docker image and tag it as 'latest'
        echo "IMAGE_NAME=my-django-app:latest" >> $GITHUB_ENV  # Save the image name to the GitHub environment

  # Second job: Push the Docker image
  push:
    needs: build  # This job depends on the build job
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v2  # Log in to Docker Hub
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # Use the Docker Hub username stored in secrets
        password: ${{ secrets.DOCKER_PASSWORD }}  # Use the Docker Hub password stored in secrets

    - name: Pull the Docker image
      run: |
        docker pull my-django-app:latest  # Pull the Docker image built in the previous job to ensure it's available

    - name: Tag and push the Docker image
      run: |
        docker tag my-django-app:latest ${{ secrets.DOCKER_USERNAME }}/my-django-app:latest  # Tag the image with the Docker Hub username
        docker push ${{ secrets.DOCKER_USERNAME }}/my-django-app:latest  # Push the tagged image to Docker Hub